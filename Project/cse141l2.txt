//program 2
MOV R0, 1 //R0 = 1
MOV R1, 1 //R1 = 1
SLL R0, 1 //R0 = 1 0
SLL R0, 1 //R0 = 1 0 0
ADD R1, R0 //R1 = 1 0 1
SLL R1, 1 //R1 = 1 0 1 0
INC R1 //R1 = 1 0 1 1
SLL R1, 1 //R1 = 1 0 1 1 0
INC R1 //R1 = 1 0 1 1 1
SLL R1, 1 //R1 = 1 0 1 1 1 0
INC R1 //R1 = 1 0 1 1 1 1
SLL R1, 1 //R1 = 1 0 1 1 1 1 0 = 94
MOV R2, 0 //R2 = 0
ADD R2, R1 //R2 = 1 0 1 1 1 0 = 94
SLL R0, 1 //R0 = 1 0 0 0
SLL R0, 1 //R0 = 1 0 0 0 0
SLL R0, 1 //R0 = 1 0 0 0 0 0
SLL R0, 1 //R0 = 1 0 0 0 0 0 0 = 64
LOOP2_1:
MOV R3, 1 //R3 = 1
ADD R3, R0 //R3 = 65
LD R3, R3 //R3 = mem[R3(65)] = 0 b11 b10 b9 b8 b7 b6 b5
MOV R4, 1 //R4 = 1
AND R4, R3 //R4 = b5
SRL R3, 1 //R3 = 0 0 b11 b10 b9 b8 b7 b6
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = b6
XOR R4, R5 //R4 = b5 ^ b6
SRL R3, 1 //R3 = 0 0 0 b11 b10 b9 b8 b7
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = b6
XOR R4, R5 //R4 = b5 ^ b6 ^ b7
SRL R3, 1 //R3 = 0 0 0 0 b11 b10 b9 b8
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = b8
XOR R4, R5 //R4 = b5 ^ b6 ^ b7 ^ b8
SRL R3, 1 //R3 = 0 0 0 0 0 b11 b10 b9
MOV R6, 1 //R6 = 1
AND R6, R3 //R6 = b9
XOR R5, R6 //R5 = b8 ^ b9
XOR R4, R6 //R4 = b5 ^ b6 ^ b7 ^ b8 ^ b9
SRL R3, 1 //R3 = 0 0 0 0 0 0 b11 b10
MOV R6, 1 //R6 = 1
AND R6, R3 //R6 = b10
XOR R5, R6 //R5 = b8 ^ b9 ^ b10
XOR R4, R6 //R4 = b5 ^ b6 ^ b7 ^ b8 ^ b9 ^ b10
SRL R3, 1 //R3 = 0 0 0 0 0 0 0 b11
MOV R6, 1 //R6 = 1
AND R6, R3 //R6 = b11
XOR R5, R6 //R5 = b8 ^ b9 ^ b10 ^ b11 =s4
XOR R4, R6 //R4 = b5 ^ b6 ^ b7 ^ b8 ^ b9 ^ b10 ^ b11 = s8
LD R3, R0 //R3 = mem[R0(64)] = p8 b4 b3  b2 p4 b1 p2 p1
SRL R3, 1 //R3 =  0 p8 b4  b3  b2 p4 b1 p2
SRL R3, 1 //R3 =  0 0 p8 b4   b3  b2 p4 b1
SRL R3, 1 //R3 =  0 0 0 p8 b4   b3  b2 p4
SRL R3, 1 //R3 =  0 0 0 0 p8 b4   b3  b2
SRL R3, 1 //R3 =  0 0 0 0 0 p8 b4   b3 
SRL R3, 1 //R3 =  0 0 0 0 0 0 p8 b4
SRL R3, 1 //R3 =  0 0 0 0 0 0 0 p8
XOR R4, R3 //R4 = s8 ^ p8
SLL R4, 1 //R4 = s8 ^ p8 0
SLL R4, 1 //R4 = s8 ^ p8 0 0
SLL R4, 1 //R4 = s8 ^ p8 0 0 0
LD R3, R0 //R3 = mem[R0(64)] = p8 b4 b3  b2 p4 b1 p2 p1
SRL R3, 1 //R3 =  0 p8 b4  b3  b2 p4 b1 p2
SRL R3, 1 //R3 =  0 0 p8 b4  b3  b2 p4 b1
SRL R3, 1 //R3 =  0 0 0 p8 b4  b3  b2 p4
MOV R7, 1 //R6 = 1
AND R7, R3 //R7 = p4
SRL R3, 1 //R3 =  0 0 0 0 p8 b4  b3  b2
MOV R6, 1 //R6 = 1
AND R6, R3 //R6 = b2
XOR R5, R6 //R5 = b8 ^ b9 ^ b10 ^ b11 ^ b2
SRL R3, 1 //R3 =  0 0 0 0 0 p8 b4  b3
MOV R6, 1 //R6 = 1
AND R6, R3 //R6 = b3
XOR R5, R6 //R5 = b8 ^ b9 ^ b10 ^ b11 ^ b2 ^ b3
SRL R3, 1 //R3 =  0 0 0 0 0 0 p8 b4
MOV R6, 1 //R6 = 1
AND R6, R3 //R6 = b4
XOR R5, R6 //R5 = b8 ^ b9 ^ b10 ^ b11 ^ b2 ^ b3 ^ b4 = s4
XOR R5, R7 //R5 = s4 ^ p4
SLL R5, 1 //R5 = s4 ^ p4 0
SLL R5, 1 //R5 = s4 ^ p4 0 0
XOR R4, R5 //R4 =  s8 ^ p8 s4 ^ p4 0 0
LD R3, R0 //R3 = mem[R0(64)] = p8 b4 b3  b2 p4 b1 p2 p1
SRL R3, 1 //R3 =  0 p8 b4  b3  b2 p4 b1 p2
SRL R3, 1 //R3 =  0 0 p8 b4  b3  b2 p4 b1
MOV R7, 1 //R7 = 1
MOV R6, 1 //R6 = 1
AND R7, R3 //R7 = b1
AND R6, R3 //R6 = b1
SRL R3, 1 //R3 =  0 0 0 p8 b4  b3  b2 p4
SRL R3, 1 //R3 =  0 0 0 0 p8 b4  b3  b2
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = b2
XOR R6, R5 //R6 = b1 ^ b2
SRL R3, 1 //R3 =  0 0 0 0 0 p8 b4  b3
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = b3
XOR R7, R5 //R7 = b1 ^ b3
SRL R3, 1 //R3 =  0 0 0 0 0 0 p8 b4
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = b4
XOR R7, R5 //R7 = b1 ^ b3 ^ b4
XOR R6, R5 //R6 = b1 ^ b2 ^ b4
MOV R3, 1 //R3 = 1
ADD R3, R0 //R3 = 65
LD R3, R3 //R3 = mem[R3(65)] = 0 b11 b10 b9 b8 b7 b6 b5
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = b5
XOR R6, R5 //R6 = b1 ^ b2 ^ b4 ^ b5
SLL R3, 1 //R3 = 0 0 b11 b10 b9 b8 b7 b6
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = b6
XOR R7, R5 //R7 = b1 ^ b3 ^ b4 ^ b6
SLL R3, 1 //R3 = 0 0 0 b11 b10 b9 b8 b7
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = b7
XOR R7, R5 //R7 = b1 ^ b3 ^ b4 ^ b6 ^ b7
XOR R6, R5 //R7 = b1 ^ b2 ^ b4 ^ b5 ^ b7
SLL R3, 1 //R3 = 0 0 0 0 b11 b10 b9 b8
SLL R3, 1 //R3 = 0 0 0 0 0 b11 b10 b9
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = b9
XOR R6, R5 //R6 = b1 ^ b2 ^ b4 ^ b5 ^ b7 ^ b9
SLL R3, 1 //R3 = 0 0 0 0 0 0 b11 b10
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = b10
XOR R7, R5 //R7 = b1 ^ b3 ^ b4 ^ b6 ^ b7 ^ b10
SLL R3, 1 //R3 = 0 0 0 0 0 0 0 b11
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = b10
XOR R6, R5 //R6 = b1 ^ b2 ^ b4 ^ b5 ^ b7 ^ b9 ^ b11 = s1
XOR R7, R5 //R7 = b1 ^ b3 ^ b4 ^ b6 ^ b7 ^ b10 ^ b11 = s2
LD R3, R0 //R3 = mem[R0(64)] = p8 b4 b3  b2 p4 b1 p2 p1
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = p1
XOR R6, R5 //R7 = p1 ^ s1
SLL R3, 1 // R3 = 0 p8 b4 b3  b2 p4 b1 p2
MOV R5, 1 //R5 = 1
AND R5, R3 //R5 = p2
XOR R7, R5 //R7 = p2 ^ s2
SLL R7, 1 //R7 =  p2 ^ s2 0
XOR R7, R6 //R7 = p2 ^ s2 p1 ^ s1
XOR R4, R7 //R4 = s8 ^ p8 s4 ^ p4 p2 ^ s2 p1 ^ s1 = err
//R4 : error, R0: 64, R1:94 (increment), R2:94
// R3, R5, R6, R7 ok
LD R3, R0 //R3 = mem[R0(64)] = p8 b4 b3  b2 p4 b1 p2 p1
MOV R5, 1 //R5 = 1
SLL R5, 1 //R5 = 10
SLL R5, 1 //R5 = 100 = 8
MOV R6, 1 //R6 = 0
MOV R7, 1 //R7 = 1
LOOP2_2:
BNE R4, R6
JR ELSE2_1
XOR R3, R7
ELSE2_1:
SLL R7, 1 //R7 = 10...
INC R6 //R6 += 1
BNE R6, R5 (R6 != 8)
JR LOOP2_2
SW R3, R1 //MEM[R1(94)] = NEW p8 b4 b3  b2 p4 b1 p2 p1
INC R0 //R0 = 65
LD R3, R0 //R3 = mem[R0(65)] = 0  b11 b10 b9 b8 b7 b6 b5 
SLL R5, 1 //R5 = 1000 =16
MOV R7, 1 //R7 = 1
LOOP2_3:
BNE R4, R6
JR ELSE2_2
XOR R3, R7 //R3 = NEW 0  b11 b10 b9 b8 b7 b6 b5
ELSE2_2:
SLL R7, 1 //R7 = 10...
INC R6 //R6 += 1
BNE R6, R5 //(R6 != 16)
JR LOOP2_3
MOV R6, 0 //R6 =0
ADD R6, R1 //R6 = 94
INC R6 //R6 = 95
SW R3, R6 // mem[R6(65)] = NEW 0  b11 b10 b9 b8 b7 b6 b5
LD R7, R1 //R7 = NEW p8 b4 b3  b2 p4 b1 p2 p1
SLL R7, 1 //R7 = b4 b3  b2 p4 b1 p2 p1 0
SRL R7, 1 //R7 = 0 b4 b3  b2 p4 b1 p2 p1
SRL R7, 1 //R7 = 0 0 b4 b3  b2 p4 b1 p2
SRL R7, 1 //R7 = 0 0 0 b4 b3  b2 p4 b1
MOV R5, 1 //R5 = 1
AND R5, R7 //R5 = b1
SRL R7, 1 //R7 = 0 0 0 0 b4 b3 b2 p4
SRL R7, 1 //R7 = 0 0 0 0 0 b4 b3  b2
SLL R7, 1 //R7 = 0 0 0 0 0 b4 b3  b2 0
XOR R7, R5 //R7 = 0 0 0 0 0 b4 b3  b2 b1
LD R3, R6 // R3 = NEW 0  b11 b10 b9 b8 b7 b6 b5
SLL R3, 1 //R3 = b11 b10 b9 b8 b7 b6 b5 0
SLL R3, 1 //R3 = b10 b9 b8 b7 b6 b5 0 0
SLL R3, 1 //R3 = b9 b8 b7 b6 b5 0 0 0
SLL R3, 1 //R3 =b8 b7 b6 b5 0 0 0 0
XOR R3, R7 //R3 = b8 b7 b6 b5 b4 b3  b2 b1
SW R3, R1 //mem[R1(94)] =  b8 b7 b6 b5 b4 b3  b2 b1
INC R1 //R1 = 95
LD R3, R1 //R3 = mem[R1(95)] = 0  b11 b10 b9 b8 b7 b6 b5
SRL R3, 1 //R3 = 0 0  b11 b10 b9 b8 b7 b6
SRL R3, 1 //R3 = 0 0 0 b11 b10 b9 b8 b7
SRL R3, 1 //R3 = 0 0 0 0 b11 b10 b9 b8
SRL R3, 1 //R3 = 0 0 0 0 0 b11 b10 b9
SW R3, R1 //R3 = mem[R1(95)] = 0 0 0 0 0 b11 b10 b9
INC R0 //R0 = 66
INC R1 //R1 = 96
BNE R0, R2 //R0 != 94
JR LOOP2_1
HALT